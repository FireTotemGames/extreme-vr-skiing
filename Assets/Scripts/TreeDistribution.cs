using UnityEngine;
using Random = UnityEngine.Random;

public class TreeDistribution : MonoBehaviour
{
    /* ======================================================================================================================== */
    /* VARIABLE DECLARATIONS                                                                                                    */
    /* ======================================================================================================================== */

    [SerializeField] private int numberOfTrees = 100;
    [SerializeField] private float width = 50f;
    [SerializeField] private GameObject tree;
    [SerializeField] private AnimationCurve probabilityCurve;

    /* ======================================================================================================================== */
    /* UNITY CALLBACKS                                                                                                          */
    /* ======================================================================================================================== */

    private void Start()
    {
        for (int i = 0; i < numberOfTrees; i++)
        {
            float x;
            float z = Random.Range(0f, 1f);

            do
            {
                x = Random.Range(-1f, 1f);
            } while (Random.Range(0f, 1f) > probabilityCurve.Evaluate(Mathf.Abs(x)));
            
            Instantiate(tree, new Vector3(x * width / 2f, 0f, z * width), Quaternion.identity, transform);
        }
    }

    private void Update()
    {
        
    }


    /* ======================================================================================================================== */
    /* COROUTINES                                                                                                               */
    /* ======================================================================================================================== */

    /* ======================================================================================================================== */
    /* PRIVATE FUNCTIONS                                                                                                        */
    /* ======================================================================================================================== */

    /* ======================================================================================================================== */
    /* PUBLIC FUNCTIONS                                                                                                         */
    /* ======================================================================================================================== */

    /* ======================================================================================================================== */
    /* EVENT CALLERS                                                                                                            */
    /* ======================================================================================================================== */

    /* ======================================================================================================================== */
    /* EVENT LISTENERS                                                                                                          */
    /* ======================================================================================================================== */

}